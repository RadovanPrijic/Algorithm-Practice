// https://leetcode.com/problems/valid-palindrome-ii/

class Solution {
    public boolean validPalindrome(String s) {
        int left = 0, right = s.length() - 1;
        boolean usedRemoval = false;

        while (left < right) {
            if (isAlphaNumeric(s.charAt(left)) && isAlphaNumeric(s.charAt(right))) {
                if(Character.toLowerCase(s.charAt(left)) == Character.toLowerCase(s.charAt(right))){
                    left++;
                    right--;
                } else {
                    if(!usedRemoval){
                        if(Character.toLowerCase(s.charAt(left+1)) == Character.toLowerCase(s.charAt(right)) && left + 1 < right){
                            usedRemoval = true;
                            left++;
                        } else if(Character.toLowerCase(s.charAt(left)) == Character.toLowerCase(s.charAt(right-1)) && right - 1 > left){
                            usedRemoval = true;
                            right--;
                        }
                    } else return false;
                }          
            } else if (!isAlphaNumeric(s.charAt(left)) && !isAlphaNumeric(s.charAt(right))) {
                left++;
                right--;
            } else if (!isAlphaNumeric(s.charAt(left))) {
                left++;
            } else if (!isAlphaNumeric(s.charAt(right))) {
                right--;
            }
        }

        return true;
    }

public boolean isAlphaNumeric(char c) {
        return (c >= 'A' && c <= 'Z' || 
                c >= 'a' && c <= 'z' || 
                c >= '0' && c <= '9');
    }
}
