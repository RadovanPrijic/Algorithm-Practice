// https://neetcode.io/problems/search-2d-matrix

class Solution {
    public boolean searchMatrix(int[][] matrix, int target) {
        int n = matrix.length, m = matrix[0].length;
        int row_low = 0, row_high = n - 1;

        while(row_low <= row_high) {
            int row_mid = row_low + (row_high - row_low) / 2;

            if(target >= matrix[row_mid][0] && target <= matrix[row_mid][m-1]){
                int col_low = 0, col_high = m - 1; 

                while(col_low <= col_high){
                    int col_mid = col_low + (col_high - col_low) / 2;

                    if(target == matrix[row_mid][col_mid])
                        return true;
                    else if(target > matrix[row_mid][col_mid])
                        col_low = col_mid + 1;
                    else
                        col_high = col_mid - 1; 
                }

                return false;
            } else {
                if(target > matrix[row_mid][m-1])
                    row_low = row_mid + 1;
                else if(target < matrix[row_mid][0])
                    row_high = row_mid - 1;
            }
        }
        
        return false;
    }
}
