// https://leetcode.com/problems/capacity-to-ship-packages-within-d-days/

class Solution {
    public int shipWithinDays(int[] weights, int days) {
        int low = 0, high = 0, minCapacity = 0;

        for (int i = 0; i < weights.length; i++) {
            low = Math.max(low, weights[i]);
            high += weights[i];
        }

        while (low <= high) {
            int mid = low + (high - low) / 2;

            if(canDeliverWithinTimeframe(weights, days, mid)){
                minCapacity = mid;
                high = mid - 1;
            } else {
                low = mid + 1;
            }
        }

        return minCapacity;
    }

    public boolean canDeliverWithinTimeframe(int[] weights, int days, int capacity){
        int i = 0, dayCount = 1, remainingCapacity = capacity;

        while(i < weights.length) {
            if(remainingCapacity - weights[i] < 0){
                dayCount++;

                if(dayCount > days)
                    return false;

                remainingCapacity = capacity;
            }

            remainingCapacity -= weights[i];
            i++;
        }

        return true;
    }
}
