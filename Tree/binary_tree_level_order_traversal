// https://neetcode.io/problems/level-order-traversal-of-binary-tree

/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */

class Solution {
    List<List<Integer>> resultList = new ArrayList<>();
    
    public List<List<Integer>> levelOrder(TreeNode root) {
        inorder(root, 0);
        return resultList;
    }
    
    private void inorder(TreeNode node, int level) {
        if (node == null) return;
        
        if (resultList.size() == level)
            resultList.add(new ArrayList<>());
        
        resultList.get(level).add(node.val);
        inorder(node.left, level + 1);
        inorder(node.right, level + 1);
    }
}
