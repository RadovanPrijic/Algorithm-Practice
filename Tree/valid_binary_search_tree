// https://neetcode.io/problems/valid-binary-search-tree

/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public boolean isValidBST(TreeNode root) {
        return checkBSTValidity(root, Integer.MIN_VALUE, Integer.MAX_VALUE);
    }

    public boolean checkBSTValidity(TreeNode node, int left, int right) {
        if (node == null) return true;

        if (!(left < node.val && node.val < right)) return false;

        return checkBSTValidity(node.left, left, node.val) && 
               checkBSTValidity(node.right, node.val, right);
    }
}
