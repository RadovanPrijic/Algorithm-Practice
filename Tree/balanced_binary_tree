// https://neetcode.io/problems/balanced-binary-tree

/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */

class Solution {
    int maxDifference = 0;

    public boolean isBalanced(TreeNode root) {
        inorder(root, 0);
        return maxDifference <= 1 ? true : false;
    }

    public int inorder(TreeNode node, int height) {
        if(node == null) return height;

        int leftHeight = inorder(node.left, height);
        int rightHeight = inorder(node.right, height);

        maxDifference = Math.max(maxDifference, Math.abs(leftHeight - rightHeight));

        return 1 + height + Math.max(leftHeight, rightHeight);
    }
}
