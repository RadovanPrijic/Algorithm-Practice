// https://neetcode.io/problems/kth-smallest-integer-in-bst

/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */

class Solution {
    public int kthSmallest(TreeNode root, int k) {
        List<Integer> nodeValues = new ArrayList<>();
        dfs(root, nodeValues);

        return nodeValues.get(k - 1);
    }

    private void dfs(TreeNode node, List<Integer> nodeValues) {
        if (node == null) return;

        dfs(node.left, nodeValues);
        nodeValues.add(node.val);
        dfs(node.right, nodeValues);
    }
}
